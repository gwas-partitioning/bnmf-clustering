start=Sys.time()
# load requires packages
install.packages("pacman")
pacman::p_load(tidyverse, data.table, readxl, magrittr, dplyr, strex,
rstudioapi, DT, kableExtra, GenomicRanges)
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GenomicRanges")
# SECTION 1: PULL IN GWAS INFORMATION
data_dir = "../example_data/"
rsID_map_file <- file.path(data_dir, "rsID_map_example.txt")  # From dbSNP v1.38 -- maps positional IDs to rsIDs
# GWAS for main trait
gwas <- read_excel(file.path(data_dir, "clustering_data_sources_example.xlsx"),
sheet="main_gwas") %>%
data.frame()
setwd("~/Partners HealthCare Dropbox/Kirk Smith/MGH/bnmf-clustering/scripts")
data_dir = "../example_data/"
rsID_map_file <- file.path(data_dir, "rsID_map_example.txt")  # From dbSNP v1.38 -- maps positional IDs to rsIDs
# GWAS for main trait
gwas <- read_excel(file.path(data_dir, "clustering_data_sources_example.xlsx"),
sheet="main_gwas") %>%
data.frame()
# GWAS for clustering traits
gwas_traits <- read_excel(file.path(data_dir, "clustering_data_sources_example.xlsx"),
sheet="trait_gwas")
# GWAS to be used for final allele alignment
main_ss_filepath <- gwas %>% filter(largest=="Yes") %>% pull(full_path)
gwas_ss_files <- setNames(gwas$full_path, gwas$study)
trait_ss_files <- setNames(gwas_traits$full_path, gwas_traits$trait)
trait_ss_size <- setNames(gwas_traits$sample_size, gwas_traits$trait)
View(gwas)
View(gwas_traits)
# GWAS to be used for final allele alignment
main_ss_filepath <- gwas %>% filter(largest=="Yes") %>% pull(full_path)
gwas_ss_files <- setNames(gwas$full_path, gwas$study)
trait_ss_files <- setNames(gwas_traits$full_path, gwas_traits$trait)
trait_ss_size <- setNames(gwas_traits$sample_size, gwas_traits$trait)
# SECTION 2: PULL SIGNIFICANT VARIANTS FROM MAIN TRAIT GWAS
# P-value threshold for variants in main trait
PVCUTOFF = 5e-8
n_gwas <- length(gwas_ss_files)
vars_sig = data.frame(VAR_ID = as.character(),
P_VALUE = as.numeric(),
Risk_Allele=as.character(),
GWAS=as.character())
print(sprintf("Pulling significant SNPs w/ pval<%.1e from %i T2D GWAS...", PVCUTOFF, n_gwas))
for(i in 1:n_gwas) {
print(paste0("...Reading ", names(gwas_ss_files)[i], "..."))
vars <- fread(gwas_ss_files[i], data.table = F, stringsAsFactors=F)
if (!"BETA" %in% colnames(vars)){
print("Converting Odds Ratio to Log Odds Ratio...")
vars <- vars %>%
mutate(BETA = log(as.numeric(ODDS_RATIO)))
}
vars <- vars %>%
filter(as.numeric(P_VALUE) <= PVCUTOFF) %>%
subset(grepl("^[0-9]+_[0-9]+_[ACGT]+_[ACGT]", VAR_ID)) %>%
separate(VAR_ID, into=c("CHR", "POS", "REF", "ALT"), sep="_", remove = F) %>%
mutate(Risk_Allele = ifelse(BETA>=0, ALT, REF)) %>%
mutate(GWAS = gwas$study[i]) %>%
select(VAR_ID, P_VALUE, Risk_Allele, GWAS)
print(nrow(vars))
vars_sig = rbind(vars_sig, vars)
}
print(paste("No. total SNPs below pval cutoff:",nrow(vars_sig)))
# remove duplicates
vars_sig_uniq <- vars_sig %>%
arrange(VAR_ID, P_VALUE) %>%
filter(!duplicated(VAR_ID)) %>% # so we remove duplicates with the higher pvalue
rename(PVALUE = P_VALUE)
